#ifndef INTERPRETER_H
#define INTERPRETER_H

#include <string>

#include "erisval.h"
#include "node.h"

namespace eris {
    // Walks over the abstract syntax tree generated by the parser
    class Interpreter {
    private:
        std::string filename{};

        void check_operand_type(const ErisVal& val, ErisValType type, std::size_t line) const;
    public:
        Interpreter(const std::string& filename); 
        ErisVal visit(Node* node);
        ErisVal visit(NumberNode* node);
        ErisVal visit(NullNode* node);
        ErisVal visit(TrueNode* node);
        ErisVal visit(FalseNode* node);
        ErisVal visit(UnaryNode* node);
        ErisVal visit(BinaryNode* node);
        ErisVal visit(ProgramNode* node);
    };
} // namespace eris

#endif // INTERPRETER_H